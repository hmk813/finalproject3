<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="staff">
	
	<!-- 직원등록 -->
	<insert id="insert" parameterType="StaffDto">
		insert into staff (
			staff_id, staff_pw,staff_department_no, 
			staff_birth, staff_phone,staff_address,
			staff_grade, staff_medical_department,
			staff_name,staff_enroll_date
		)
		values(
			#{staffId}, #{staffPw}, #{staffDepartmentNo},
			#{staffBirth}, #{staffPhone}, #{staffAddress},
			#{staffGrade}, #{staffMedicalDepartment},
			#{staffName},#{staffEnrollDate}		 
		)
	</insert>
	
	<!-- 직원목록 -->
	<select id="list" resultType="DepartmentVO">
		select * from (
    select tmp.*, rownum rn from (
        select * from department inner join staff on department_no = staff_department_no
    )
TMP) where rn between #{startRow} and #{endRow}
	</select>
	
	<!-- type, keyword검색 -->
	<select id="searchList" parameterType="map" resultType="DepartmentVO">
		select * from (
    select tmp.*, rownum rn from (
        select * from department inner join staff on department_no = staff_department_no where instr(${type}, #{keyword}) > 0
    )
TMP) where rn between #{startRow} and #{endRow} order by ${type} asc
	</select>
	
	<!-- 직원상세를 위한 단일 조회 -->
	<select id="one" parameterType="String" resultType="StaffDto">
		select * from staff where staff_id = #{staffId}
	</select>
	
	<!-- 직원수정 -->
	<update id="edit" parameterType="StaffDto">
		update staff
		set
			staff_department_no=#{staffDepartmentNo}, 
			staff_birth=#{staffBirth}, 
			staff_phone=#{staffPhone}, 
			staff_adress=#{staffAddress}, 
			staff_enroll_date=#{staffEnrollDate}, 
			staff_state=#{staffState}, 
			staff_grade=#{staffGrade}, 
			staff_leave_cnt=#{staffLeaveCnt}, 
			staff_dayoff=#{staffDayoff}
			staff_medical_department=#{staffMedicalDepartment}
		where
				staff_id=#{staffId}
	</update>

 	<!-- 개인정보 변경 -->
 	<update id="information" parameterType="StaffDto">
 		update staff
 				set 
 					staff_phone = #{staffPhone},
 					staff_address = #{staffAddress}
 				where
 					staff_id = #{staffId}
 	</update>
 	
 	<!-- 비밀번호 변경-->
 	<update id="password" parameterType="map">
 		update staff 
 			set staff_pw = #{afterPw} 
 				where staff_id = #{staffId}
 	</update>
 	
	<!-- 직원삭제 -->
 	<delete id="delete" parameterType="String">
 		delete staff where staff_id = #{staffId}
 	</delete>	
 
	<!-- 암호화 (아직 대기)-->
	<insert id="join" parameterType="StaffDto">
		insert into staff(staff_id, staff_pw)
		values(#{staffId}, #{staffPw})
	</insert>
	
	<!-- 검색 조회 시 직원 수 -->
	<select id="searchCount" parameterType="map" resultType="int">
		select count(*) from (select * from department inner join staff on department_no = staff_department_no) where instr(${type}, #{keyword}) > 0
	</select>
 	
 	<!-- 전체 조회 시 직원 수 -->
 	<select id="allCount" parameterType="String" resultType="int">
 		select count(*) from (select * from department inner join staff on department_no = staff_department_no)
 	</select>

	<!-- 부서조회 -->
	<select id="selectDepartment" resultType="DepartmentDto">
		select * from department order by department_no asc
	</select>
</mapper>